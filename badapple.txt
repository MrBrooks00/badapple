#include "stdio.h"
#include "time.h"
#include "conio.h"

#include <cstdlib>
#include <iostream>
#include <fstream>

#include "windows.h"

using namespace std;


clock_t NowTime;
const int FRAMES_PER_SECOND = 15;
int timeNex;
int timeUse;
int frame = 0;
int NowFPS;

int main(int argc, char **argv) {
    //自己想
    filebuf * pbuffer;
    ifstream infile;
    long size;
    char * buffer;
    // 要读入整个文件，必须采用二进制打开
    infile.open ("bad apple", ios::binary);
    // 获取infile对应buffer对象的指针
    pbuffer=infile.rdbuf();

    // 获取文件大小
    size=pbuffer->pubseekoff (0,ios::end,ios::in);
    pbuffer->pubseekpos (0,ios::in);
    // 分配内存空间
    buffer=new char[size];


    int i=0;
    int key=0;


    ///////////////////////////////////////////////////////////////////////////主循环哦
    while (1) {
        ///////////////////////////////////////////////////////////////////////////渲染帧
        i++;


        key = int(size / 3280);

        // 获取文件内容
        pbuffer->sgetn (buffer,key);
        cout.write(buffer,key);

        system("cls");
        NowTime = clock();
        
        ///////////////////////////////////////////////////////////////////////////处理帧频
        frame++;
        if ( clock() <= timeNex ) Sleep( timeNex - clock() ); //限制帧频
        timeNex = timeNex + ( 1000 / FRAMES_PER_SECOND );
        if ((clock() - timeUse) > 500) { //计算帧率
            NowFPS = (frame * 100 * 1000 / (clock() - timeUse)) / 100.f;
            timeUse = clock();
            frame = 0;

        }
        if(frame>=3280)
            break;
    }
    delete []buffer;
    return 0;
    infile.close();
    getch();
}